/* 
 * DEFINTST format
 *      name: Instruction name
 *      fmt_str: String representing the format for disassembly
 *      fmt: Instruction category
 *      opcode: opcode mask, bits 31-26
 *      func: secondary opcode
 */


/* STANDARD INSTRUCTIONS */
/* Instructions recognizable with opcode OPC_SIMPLE
 * These instructions can easily be recognized by reading the opcode */

DEFINST(J,
	"j%target",
	0x02,
	0x00,
	0x00,
	0x00)
DEFINST(JAL,
	"jal%target",
	0x03,
	0x00,
	0x00,
	0x00)
DEFINST(BEQ,
	"beq%rs,%rt,%offsetbr",
	0x04,
	0x00,
	0x00,
	0x00)
DEFINST(BNE,
	"bne%rs,%rt,%offsetbr",
	0x05,
	0x00,
	0x00,
	0x00)
DEFINST(BLEZ,
	"blez%rs,%offsetbr",
	0x06,
	0x00,
	0x00,
	0x00)
DEFINST(BGTZ,
	"bgtz%rs,%offsetbr",
	0x07,
	0x00,
	0x00,
	0x00)
DEFINST(ADDI,
	"addi%rt,%rs,%Imm",
	0x08,
	0x00,
	0x00,
	0x00)
DEFINST(ADDIU,
	"addiu%rt,%rs,%Imm",
	0x09,
	0x00,
	0x00,
	0x00)
DEFINST(SLTI,
	"slti%rt,%rs,%Imm",
	0x0a,
	0x00,
	0x00,
	0x00)
DEFINST(SLTIU,
	"sltiu%rt,%rs,%Imm",
	0x0b,
	0x00,
	0x00,
	0x00)
DEFINST(ANDI,
	"andi%rt,%rs,%Immhex",
	0x0c,
	0x00,
	0x00,
	0x00)
DEFINST(ORI,
	"ori%rt,%rs,%Immhex",
	0x0d,
	0x00,
	0x00,
	0x00)
DEFINST(XORI,
	"xori%rt,%rs,%Immhex",
	0x0e,
	0x0,
	0x00,
	0x00)
DEFINST(LUI,
	"lui%rt,%Immhex",
	0x0f,
	0x0,
	0x00,
	0x00)
DEFINST(BEQL,
	"beql%rs,%rt,%offsetbr",
	0x14,
	0x00,
	0x00,
	0x00)
DEFINST(BNEL,
	"bnel%rs,%rt,%offsetbr",
	0x15,
	0x00,
	0x00,
	0x00)
DEFINST(BLEZL,
	"blezl%rs,%offsetbr",
	0x16,
	0x00,
	0x00,
	0x00)
DEFINST(BGTZL,
	"bgtzl%rs,%offsetbr",
	0x17,
	0x00,
	0x00,
	0x00)
DEFINST(LB,
	"lb%rt,%offset(%base)",
	0x20,
	0x00,
	0x00,
	0x00)
DEFINST(LH,
	"lh%rt,%offset(%base)",
	0x21,
	0x00,
	0x00,
	0x00)
DEFINST(LWL,
	"lwl%rt,%offset(%base)",
	0x22,
	0x00,
	0x00,
	0x00)
DEFINST(LW,
	"lw%rt,%offset(%base)",
	0x23,
	0x00,
	0x00,
	0x00)
DEFINST(LBU,
	"lbu%rt,%offset(%base)",
	0x24,
	0x00,
	0x00,
	0x00)
DEFINST(LHU,
	"lhu%rt,%offset(%base)",
	0x25,
	0x00,
	0x00,
	0x00)
DEFINST(LWR,
	"lwr%rt,%offset(%base)",
	0x26,
	0x00,
	0x00,
	0x00)
DEFINST(SB,
	"sb%rt,%offset(%base)",
	0x28,
	0x00,
	0x00,
	0x00)
DEFINST(SH,
	"sh%rt,%offset(%base)",
	0x29,
	0x00,
	0x00,
	0x00)
DEFINST(SWL,
	"swl%rt,%offset(%base)",
	0x2a,
	0x00,
	0x00,
	0x00)
DEFINST(SW,
	"sw%rt,%offset(%base)",
	0x2b,
	0x00,
	0x00,
	0x00)
DEFINST(SWR,
	"swr%rt,%offset(%base)",
	0x2e,
	0x00,
	0x00,
	0x00)
DEFINST(CACHE,
	"cache%op,%offset(%base)",
	0x2f,
	0x00,
	0x00,
	0x00)
DEFINST(LL,
	"ll%rt,%offset(%base)",
	0x30,
	0x00,
	0x00,
	0x00)
DEFINST(LWC1,
	"lwc1%ft,%offset(%base)",
	0x31,
	0x00,
	0x00,
	0x00)
DEFINST(LWC2,
	"lwc2%rt,%offset(%base)",
	0x32,
	0x00,
	0x00,
	0x00)
DEFINST(PREF,
	"pref%hint,%offset(%base)",
	0x33,
	0x00,
	0x00,
	0x00)
DEFINST(LDC1,
	"ldc1%ft,%offset(%base)",
	0x35,
	0x00,
	0x00,
	0x00)
DEFINST(LDC2,
	"ldc2%rt,%offset(%base)",
	0x36,
	0x00,
	0x00,
	0x00)
DEFINST(SC,
	"sc%rt,%offset(%base)",
	0x38,
	0x00,
	0x00,
	0x00)
DEFINST(SWC1,
	"swc1%ft,%offset(%base)",
	0x39,
	0x00,
	0x00,
	0x00)
DEFINST(SWC2,
	"swc2%rt,%offset(%base)",
	0x3a,
	0x00,
	0x00,
	0x00)
DEFINST(SDC1,
	"sdc1%ft,%offset(%base)",
	0x3d,
	0x00,
	0x00,
	0x00)
DEFINST(SDC2, 
	"sdc2%rt,%offset(%base)",
	0x3e,
	0x00,
	0x00,
	0x00)

/* End of the standard instructions */
	
/* Instructions with opcode SPECIAL */

DEFINST(SLL,
	"sll%rd,%rt,%sa",
	0x00,
	0x00,
	0x00,
	0x00)
DEFINST(MOVF,
	"movf%rd,%rs,%cc",
	0x00,
	0x01,
	0x00,
	0x00)
DEFINST(MOVT,
	"movt%rd,%rs,%cc",
	0x00,
	0x01,
	0x01,
	0x00)
DEFINST(SRL,
	"srl%rd,%rt,%sa",
	0x00,
	0x02,
	0x00,
	0x00)
DEFINST(ROR,
	"ror%rd,%rt,%sa", /* Changed rotr to ror to comply with the toolchain output */
	0x00,
	0x02,
	0x01,
	0x00)
DEFINST(SRA,
	"sra%rd,%rt,%sa",
	0x00,
	0x03,
	0x00,
	0x00)
DEFINST(SLLV,
	"sllv%rd,%rt,%rs",
	0x00,
	0x04,
	0x00,
	0x00)
DEFINST(SRLV,
	"srlv%rd,%rt,%rs",
	0x00,
	0x06,
	0x00,
	0x00)
DEFINST(ROTRV,
	"rotrv%rd,%rt,%rs",
	0x00,
	0x06,
	0x01,
	0x00)
DEFINST(SRAV,
	"srav%rd,%rt,%rs",
	0x00,
	0x07,
	0x00,
	0x00)
DEFINST(JR,
	"jr%rs",
	0x00,
	0x08,
	0x00,
	0x00)
DEFINST(JALR,
	"jalr%rd%rs",
	0x00,
	0x09,
	0x00,
	0x00)
DEFINST(MOVZ,
	"movz%rd,%rs,%rt",
	0x00,
	0x0a,
	0x00,
	0x00)
DEFINST(MOVN,
	"movn%rd,%rs,%rt",
	0x00,
	0x0b,
	0x00,
	0x00)
DEFINST(SYSCALL,
	"syscall",
	0x00,
	0x0c,
	0x00,
	0x00)
DEFINST(BREAK,
	"break	0xff",
	0x00,
	0x0d,
	0x00,
	0x00)
DEFINST(SYNC,
	"sync",
	0x00,
	0x0f,
	0x00,
	0x00)
DEFINST(MFHI,
	"mfhi%rd",
	0x00,
	0x10,
	0x00,
	0x00)
DEFINST(MTHI,
	"mthi%rs",
	0x00,
	0x11,
	0x00,
	0x00)
DEFINST(MFLO,
	"mflo%rd",
	0x00,
	0x12,
	0x00,
	0x00)
DEFINST(MTLO,
	"mtlo%rs",
	0x00,
	0x13,
	0x00,
	0x00)
DEFINST(MULT,
	"mult%rs,%rt",
	0x00,
	0x18,
	0x00,
	0x00)
DEFINST(MULTU,
	"multu%rs,%rt",
	0x00,
	0x19,
	0x00,
	0x00)
DEFINST(DIV,
	"div%rd,%rs,%rt", /*Added rd to comply with the output of the toolchain */
	0x00,
	0x1a,
	0x00,
	0x00)
DEFINST(DIVU,
	"divu%rd,%rs,%rt", /*Added rd to comply with the output of the toolchain */
	0x00,
	0x1b,
	0x00,
	0x00)
DEFINST(ADD,
	"add%rd,%rs,%rt",
	0x00,
	0x20,
	0x00,
	0x00)
DEFINST(ADDU,
	"addu%rd,%rs,%rt",
	0x00,
	0x21,
	0x00,
	0x00)
DEFINST(SUB,
	"sub%rd,%rs,%rt",
	0x00,
	0x22,
	0x00,
	0x00)
DEFINST(SUBU,
	"subu%rd,%rs,%rt",
	0x00,
	0x23,
	0x00,
	0x00)
DEFINST(AND,
	"and%rd,%rs,%rt",
	0x00,
	0x24,
	0x00,
	0x00)
DEFINST(OR,
	"or%rd,%rs,%rt",
	0x00,
	0x25,
	0x00,
	0x00)
DEFINST(XOR,
	"xor%rd,%rs,%rt",
	0x00,
	0x26,
	0x00,
	0x00)
DEFINST(NOR,
	"nor%rd,%rs,%rt",
	0x00,
	0x27,
	0x00,
	0x00)
DEFINST(SLT,
	"slt%rd,%rs,%rt",
	0x00,
	0x2a,
	0x00,
	0x00)
DEFINST(SLTU,
	"sltu%rd,%rs,%rt",
	0x00,
	0x2b,
	0x00,
	0x00)
DEFINST(TGE,
	"tge%rs,%rt",
	0x00,
	0x30,
	0x00,
	0x00)
DEFINST(TGEU,
	"tgeu%rs,%rt",
	0x00,
	0x31,
	0x00,
	0x00)
DEFINST(TLT,
	"tlt%rs,%rt",
	0x00,
	0x32,
	0x00,
	0x00)
DEFINST(TLTU,
	"tltu%rs,%rt",
	0x00,
	0x33,
	0x00,
	0x00)
DEFINST(TEQ,
	"teq%rs,%rt,%code",
	0x00,
	0x34,
	0x00,
	0x00) 
DEFINST(TNE, 
	"tne%rs,%rt",
	0x00,
	0x36,
	0x00,
	0x00)

/* End of instructions with opcode SPECIAL */
	
/* Instructions with opcode REGIMM = 0x01 arg2 is the rt field
 * (bits [20:16]) */

DEFINST(BLTZ,
	"bltz%rs,%offsetbr",
	0x01,
	0x00,
	0x00,
	0x00)
DEFINST(BGEZ,
	"bgez%rs,%offsetbr",
	0x01,
	0x01,
	0x00,
	0x00)
DEFINST(BLTZL,
	"bltzl%rs,%offsetbr",
	0x01,
	0x02,
	0x00,
	0x00)
DEFINST(BGEZL,
	"bgezl%rs,%offsetbr",
	0x01,
	0x03,
	0x00,
	0x00)
DEFINST(TGEI,
	"tgei%rs,%Imm",
	0x01,
	0x08,
	0x00,
	0x00)
DEFINST(TGEIU,
	"tgeiu%rs,%Imm",
	0x01,
	0x09,
	0x00,
	0x00)
DEFINST(TLTI,
	"tlti%rs,%Imm",
	0x01,
	0x0a,
	0x00,
	0x00)
DEFINST(TLTIU,
	"tltiu%rs,%Immhex",
	0x01,
	0x0b,
	0x00,
	0x00)
DEFINST(TEQI,
	"teqi%rs,%Imm",
	0x01,
	0x0c,
	0x00,
	0x00)
DEFINST(TNEI,
	"tnei%rs,%Imm",
	0x01,
	0x0e,
	0x00,
	0x00)
DEFINST(BLTZAL,
	"bltzal%rs,%offsetbr",
	0x01,
	0x10,
	0x00,
	0x00)
DEFINST(BGEZAL,
	"bgezal%rs,%offsetbr",
	0x01,
	0x11,
	0x00,
	0x00)
DEFINST(BLTZALL,
	"bltzall%rs,%offsetbr",
	0x01,
	0x12,
	0x00,
	0x00)
DEFINST(BGEZALL,
	"bgezall%rs,%offsetbr",
	0x01,
	0x13,
	0x00,
	0x00)
DEFINST(SYNCI,
	"synci%offset(%base)",
	0x01,
	0x1f,
	0x00,
	0x00)

/* End of REGIMM instructions */
	
/* Instructions with opcode SPECIAL2 = 1c arg2 is the function field 
 * (bits [5:0]) */

DEFINST(MADD,
	"madd%rs,%rt",
	0x1c,
	0x00,
	0x00,
	0x00)
DEFINST(MADDU,
	"maddu%rs,%rt",
	0x1c,
	0x01,
	0x00,
	0x00)
DEFINST(MUL,
	"mul%rd,%rs,%rt",
	0x1c,
	0x02,
	0x00,
	0x00)
DEFINST(MSUB,
	"msub%rs,%rt",
	0x1c,
	0x04,
	0x00,
	0x00)
DEFINST(MSUBU,
	"msubu%rs,%rt",
	0x1c,
	0x05,
	0x00,
	0x00)
DEFINST(CLZ,
	"clz%rd,%rs",
	0x1c,
	0x20,
	0x00,
	0x00)
DEFINST(CLO,
	"clo%rd,%rs",
	0x1c,
	0x21,
 	0x00,
	0x00)

/* DEFINST(SDBBP,
	"sdbbp%code",
	0x1c,
	0x2f,
	0x00,
	0x00) */

/* Ednd of SPECIAL2 instructions */

/* Instructions with opcode SPECIAL3=0x1f */

DEFINST(EXT,
	"ext%rt,%rs,%pos,%size",
	0x1f,
	0x00,
	0x00,
	0x00)
DEFINST(INS,
	"ins%rt,%rs,%pos,%size",
	0x1f,
	0x04,
	0x00,
	0x00)
DEFINST(WSBH,
	"wsbh%rd,%rt",
	0x1f,
	0x20,
	0x02,
	0x00)
DEFINST(SEB,
	"seb%rd,%rt",
	0x1f,
	0x20,
	0x10,
	0x00)
DEFINST(SEH,
	"seh%rd,%rt",
	0x1f,
	0x20,
	0x18,
	0x00) 
DEFINST(RDHWR,
	"rdhwr%rt,%rd",
	0x1f,
	0x3b,
	0x00,
	0x00)

/* End of SPECIAL3 Instructions */

/* Instructions with opcode COP0=0x10 */

DEFINST(MFCO,
	"mfco%rt,%rd,%sel",
	0x10,
	0x00,
	0x00,
	0x00)
DEFINST(MTCO,
	"mtco%rt,%rd,%sel",
	0x10,
	0x00,
	0x04,
	0x00)
DEFINST(RDPGPR,
	"rdpgpr%rd,%rt",
	0x10,
	0x00,
	0x0a,
	0x00)
DEFINST(DI,
	"di%rt",
	0x10,
	0x00,
	0x0b,
	0x00)
DEFINST(EI,
	"ei%rt",
	0x10,
	0x00,
	0x0b,
	0x01)
DEFINST(WRPGPR,
	"wrpgpr%rd,%rt",
	0x10,
	0x00,
	0x0e,
	0x00)
DEFINST(TLBR,
	"tlbr",
	0x10,
	0x01,
	0x01,
	0x00)
DEFINST(TLBWI,
	"tlbwi",
	0x10,
	0x1,
	0x02,
	0x00)
DEFINST(TLBWR,
	"tlbwr",
	0x10,
	0x1,
	0x06,
	0x00)
DEFINST(TLBP,
	"tlbp",
	0x10,
	0x1,
	0x08,
	0x00)
DEFINST(ERET,
	"eret",
	0x10,
	0x1,
	0x18,
	0x00)
DEFINST(DERET,
	"deret",
	0x10,
 	0x1,
	0x1f,
	0x00)
DEFINST(WAIT,
	"wait",
	0x10,
	0x1,
	0x20,
	0x00)

/* End of COP0 instructions */
	
/* Instructions with opcode COP1=0x11 */

DEFINST(MFC1,
	"mfc1%rt,%fs",
	0x11,
	0x00,
	0x00,
	0x00)
DEFINST(CFC1,
	"cfc1%rt,%fs",
	0x11,
	0x02,
	0x00,
	0x00)
DEFINST(MFHC1,
	"mfhc1%rt,%fs",
	0x11,
	0x03,
	0x00,
	0x00)
DEFINST(MTC1,
	"mtc1%rt,%fs",
	0x11,
	0x04,
	0x00,
	0x00)
DEFINST(CTC1,
	"ctc1%rt,%fs",
	0x11,
	0x06,
	0x00,
	0x00)
DEFINST(MTHC1,
	"mthc1%rt,%fs",
	0x11,
	0x07,
	0x00,
	0x00)
DEFINST(BC1F,
	"bc1f%cc,%offsetbr",
	0x11,
	0x08,
	0x0,
	0x00)
DEFINST(BC1FL,
	"bc1fl%cc,%offsetbr",
	0x11,
	0x08,
	0x02,
	0x00)
DEFINST(BC1T,
	"bc1t%cc,%offsetbr",
	0x11,
	0x08,
	0x01,
	0x00)
DEFINST(BC1TL,
	"bc1tl%cc,%offsetbr",
	0x11,
	0x08,
	0x03,
	0x00)
DEFINST(ADD_S,
	"add_s%fd,%fs,%ft",
	0x11,
	0x10,
	0x00,
	0x00)
DEFINST(SUB_S,
	"sub_s%fd,%fs,%ft",
	0x11,
	0x10,
	0x01,
	0x00)
DEFINST(MUL_S,
	"mul_s%fd,%fs,%ft",
	0x11,
	0x10,
	0x02,
	0x00)
DEFINST(DIV_S,
	"div_s%fd,%fs,%ft",
	0x11,
	0x10,
	0x03,
	0x00)
DEFINST(SQRT_S,
	"sqrt_s%fd,%fs",
	0x11,
	0x10,
	0x04,
	0x00)
DEFINST(ABS_S,
	"abs_s%fd,%fs",
	0x11,
	0x10,
	0x05,
	0x00)
DEFINST(MOV_S,
	"mov_s%fd,%fs",
	0x11,
	0x10,
	0x06,
	0x00)
DEFINST(NEG_S,
	"neg_s%fd,%fs",
	0x11,
	0x10,
	0x07,
	0x00)
DEFINST(ROUND_L_S,
	"round_l_s%fd,%fs",
	0x11,
	0x10,
	0x08,
	0x00)
DEFINST(TRUNC_L_S,
	"trunc_l_s%fd,%fs",
	0x11,
	0x10,
	0x09,
	0x00)
DEFINST(CEIL_L_S,
	"ceil_l_s%fd,%fs",
	0x11,
	0x10,
	0x0a,
	0x00)
DEFINST(FLOOR_L_S,
	"floor_l_s%fd,%fs",
	0x11,
	0x10,
	0x0b,
	0x00)
DEFINST(ROUND_W_S,
	"round_w_s%fd,%fs",
	0x11,
	0x10,
	0x0c,
	0x00)
DEFINST(TRUNC_W_S,
	"trunc_w_s%fd,%fs",
	0x11,
	0x10,
	0x0d,
	0x00)
DEFINST(CEIL_W_S,
	"ceil_w_s%fd,%fs",
	0x11,
	0x10,
	0x0e,
	0x00)
DEFINST(FLOOR_W_S,
	"floor_w_s%fd,%fs",
	0x11,
	0x10,
	0x0f,
	0x00)
DEFINST(MOVF_S,
	"movf_s%fd,%fs,%cc",
	0x11,
	0x10,
	0x11,
	0x00)
DEFINST(MOVT_S,
	"movt_s%fd,%fs,%cc",
	0x11,
	0x10,
	0x11,
	0x01)
DEFINST(MOVZ_S,
	"movz_s%fd,%fs,%rt",
	0x11,
	0x10,
	0x12,
	0x00)
DEFINST(MOVN_S,
	"movn_s%fd,%fs,%rt",
	0x11,
	0x10,
	0x13,
	0x00)
DEFINST(RECIP_S,
	"recip_s%fd,%fs",
	0x11,
	0x10,
	0x15,
	0x00)
DEFINST(RSQRT_S,
	"rsqrt_s%fd,%fs",
	0x11,
	0x10,
	0x16,
	0x00)
DEFINST(CVT_D_S,
	"cvt_d_s%fd,%fs",
	0x11,
	0x10,
	0x21,
	0x00)
DEFINST(CVT_W_S,
	"cvt_w_s%fd,%fs",
	0x11,
	0x10,
	0x24,
	0x00)
DEFINST(CVT_L_S,
	"cvt_l_s%fd,%fs",
	0x11,
	0x10,
	0x25,
	0x00)
DEFINST(CVT_PS_S,
	"cvt_ps_s%fd,%fs,%ft",
	0x11,
	0x10,
	0x26,
	0x00)
DEFINST(ADD_D,
	"add_d%fd,%fs,%ft",
	0x11,
	0x11,
	0x00,
	0x00)
DEFINST(SUB_D,
	"sub_d%fd,%fs,%ft",
	0x11,
	0x11,
	0x01,
	0x00)
DEFINST(MUL_D,
	"mul_d%fd,%fs,%ft",
	0x11,
	0x11,
	0x02,
	0x00)
DEFINST(DIV_D,
	"div_d%fd,%fs,%ft",
	0x11,
	0x11,
	0x03,
	0x00)
DEFINST(SQRT_D,
	"sqrt_d%fd,%fs",
	0x11,
	0x11,
	0x04,
	0x00)
DEFINST(ABS_D,
	"abs_d%fd,%fs",
	0x11,
	0x11,
	0x05,
	0x00)
DEFINST(MOV_D,
	"mov_d%fd,%fs",
	0x11,
	0x11,
	0x06,
	0x00)
DEFINST(NEG_D,
	"neg_d%fd,%fs",
	0x11,
	0x11,
	0x07,
	0x00)
DEFINST(ROUND_L_D,
	"round_l_d%fd,%fs",
	0x11,
	0x11,
	0x08,
	0x00)
DEFINST(TRUNC_L_D,
	"trunc_l_d%fd,%fs",
	0x11,
	0x11,
	0x09,
	0x00)
DEFINST(CEIL_L_D,
	"ceil_l_d%fd,%fs",
	0x11,
	0x11,
	0x0a,
	0x00)
DEFINST(FLOOR_L_D,
	"floor_l_d%fd,%fs",
	0x11,
	0x11,
	0x0b,
	0x00)
DEFINST(ROUND_W_D,
	"round_w_d%fd,%fs",
	0x11,
	0x11,
	0x0c,
	0x00)
DEFINST(TRUNC_W_D,
	"trunc_w_d%fd,%fs",
	0x11,
	0x11,
	0x0d,
	0x00)
DEFINST(CEIL_W_D,
	"ceil_w_d%fd,%fs",
	0x11,
	0x11,
	0x0e,
	0x00)
DEFINST(FLOOR_W_D,
	"floor_w_d%fd,%fs",
	0x11,
	0x11,
	0x0f,
	0x00)
DEFINST(MOVF_D,
	"movf_d%fd,%fs,%cc",
	0x11,
	0x11,
	0x11,
	0x00)
DEFINST(MOVT_D,
	"movt_d%fd,%fs,%cc",
	0x11,
	0x11,
	0x11,
	0x01)
DEFINST(MOVZ_D,
	"movz_d%fd,%fs,%rt",
	0x11,
	0x11,
	0x12,
	0x00)
DEFINST(MOVN_D,
	"movn_d%fd,%fs,%rt",
	0x11,
	0x11,
	0x13,
	0x00)
DEFINST(RECIP_D,
	"recip_d%fd,%fs",
	0x11,
	0x11,
	0x15,
	0x00)
DEFINST(RSQRT_D,
	"rsqrt_d%fd,%fs",
	0x11,
	0x11,
	0x16,
	0x00)
DEFINST(CVT_S_D,
	"cvt_d_d%fd,%fs",
	0x11,
	0x11,
	0x20,
	0x00)
DEFINST(CVT_W_D,
	"cvt_w_d%fd,%fs",
	0x11,
	0x11,
	0x24,
	0x00)
DEFINST(CVT_L_D,
	"cvt_l_d%fd,%fs",
	0x11,
	0x11,
	0x25,
	0x00)
DEFINST(C_F_D,
	"c_f_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x30,
	0x00)
DEFINST(C_UN_D,
	"c_un_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x31,
	0x00)
DEFINST(C_EQ_D,
	"c_eq_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x32,
	0x00)
DEFINST(C_UEQ_D,
	"c_ueq_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x33,
	0x00)
DEFINST(C_OLT_D,
	"c_olt_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x34,
	0x00)
DEFINST(C_ULT_D,
	"c_ult_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x35,
	0x00)
DEFINST(C_OLE_D,
	"c_ole_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x36,
	0x00)
DEFINST(C_ULE_D,
	"c_ule_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x37,
	0x00)
DEFINST(C_SF_D,
	"c_sf_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x38,
	0x00)
DEFINST(C_NGLE_D,
	"c_ngle_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x39,
	0x00)
DEFINST(C_SEQ_D,
	"c_seq_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x3a,
	0x00)
DEFINST(C_NGL_D,
	"c_ngl_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x3b,
	0x00)
DEFINST(C_LT_D,
	"c_lt_d%fs,%ft",
	0x11,
	0x11,
	0x3c,
	0x00)
DEFINST(C_NGE_D,
	"c_nge_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x3d,
	0x00)
DEFINST(C_LE_D,
	"c_le_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x3e,
	0x00)
DEFINST(C_NGT_D,
	"c_ngt_d%cc,%fs,%ft",
	0x11,
	0x11,
	0x3f,
	0x00)
DEFINST(CVT_S_W,
	"cvt_s_w%fd,%fs",
	0x11,
	0x14,
	0x20,
	0x00)
DEFINST(CVT_D_W,
	"cvt_d_w%fd,%fs",
	0x11,
	0x14,
	0x21,
	0x00)
DEFINST(ADD_PS,
	"add_ps%fd,%fs,%ft",
	0x11,
	0x16,
	0x00,
	0x00)
DEFINST(SUB_PS,
	"sub_ps%fd,%fs,%ft",
	0x11,
	0x16,
	0x01,
	0x00)
DEFINST(MUL_PS,
	"mul_ps%fd,%fs,%ft",
	0x11,
	0x16,
	0x02,
	0x00)
DEFINST(ABS_PS,
	"abs_ps%fd,%fs",
	0x11,
	0x16,
	0x05,
	0x00)
DEFINST(MOV_PS,
	"mov_ps%fd,%fs",
	0x11,
	0x16,
	0x06,
	0x00)
DEFINST(NEG_PS,
	"neg_ps%fd,%fs",
	0x11,
	0x16,
	0x07,
	0x00)
DEFINST(MOVF_PS,
	"movf_ps%fd,%fs,%cc",
	0x11,
	0x16,
	0x11,
	0x00)
DEFINST(MOVT_PS,
	"movt_ps%fd,%fs,%cc",
	0x11,
	0x16,
	0x11,
	0x01)
DEFINST(MOVZ_PS,
	"movz_ps%fd,%fs,%rt",
	0x11,
	0x16,
	0x12,
	0x00)
DEFINST(MOVN_PS,
	"movn_ps%fd,%fs,%rt",
	0x11,
	0x16,
	0x13,
	0x00)
DEFINST(CVT_S_PU,
	"cvt_s_pu%fd,%fs",
	0x11,
	0x16,
	0x20,
	0x00)
DEFINST(CVT_S_PL,
	"cvt_s_pl%fd,%fs",
	0x11,
	0x16,
	0x28,
	0x00)
DEFINST(PLL_PS,
	"pll_ps%fd,%fs,%ft",
	0x11,
	0x16,
	0x2c,
	0x00)
DEFINST(PLU_PS,
	"plu_ps%fd,%fs,%ft",
	0x11,
	0x16,
	0x2d,
	0x00)
DEFINST(PUL_PS,
	"pul_ps%fd,%fs,%ft",
	0x11,
	0x16,
	0x2e,
	0x00)
DEFINST(PUU_PS,
	"puu_ps%fd,%fs,%ft",
	0x11,
	0x16,
	0x2f,
	0x00)

/* Instructions with opcode COP2=0x12 arg2 is the rs field (bits
 * [25:21]) arg3, is used for the bits nd and tf (17 and 16) */

DEFINST(MFC2,
	"mfc2%rt,%rd,%sel",
	0x12,
	0x00,
	0x00,
	0x00)
DEFINST(CFC2,
	"cfc2%rt,%rd",
	0x12,
	0x02,
	0x00,
	0x00)
DEFINST(MFHC2,
	"mfhc2%rt,%rd,%sel",
	0x12,
	0x03,
	0x00,
	0x00)
DEFINST(MTC2,
	"mtc2%rt,%rd,%sel",
	0x12,
	0x04,
	0x00,
	0x00)
DEFINST(CTC2,
	"ctc2%rt,%rd",
	0x12,
	0x06,
	0x00,
	0x00)
DEFINST(MTHC2,
	"mthc2%rt,%rd,%sel",
	0x12,
	0x07,
	0x00,
	0x00)
DEFINST(BC2F,
	"mfc2%cc,%offsetbr",
	0x12,
	0x08,
	0x00,
	0x00)
DEFINST(BC2FL,
	"bc2fl%cc,%offsetbr",
	0x12,
	0x08,
	0x02,
	0x00)
DEFINST(BC2T,
	"bc2t%cc,%offsetbr",
	0x12,
	0x08,
	0x01,
	0x00)
DEFINST(BC2TL,
	"bc2tl%cc,%offsetbr",
	0x12,
	0x08,
	0x03,
	0x00)
DEFINST(COP2,
	"cop2%func",
	0x12,
	0x11,
	0x00,
	0x00)
