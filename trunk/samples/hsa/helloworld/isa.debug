***** Stack frame *****
  Function: &main, 
  Program counter (offset in code section): 0x8c, mov_u32	$s0, 1;

  ***** Registers *****
    $s0: 0, 0, 0.000000, 0x00000000
    $s1: 0, 0, 0.000000, 0x00000000
    $s2: 0, 0, 0.000000, 0x00000000
  ***** ********* *****

  ***** Function arguments *****
  ***** ******** ********* *****

  ***** Argument scope *****
  ***** ******** ***** *****

  ***** Variables *****
  ***** ********* *****

***** Backtrace *****
#1 &main ()
***** ********* *****

***** ***** ***** *****

Executing: mov_u32	$s0, 1;
***** Stack frame *****
  Function: &main, 
  Program counter (offset in code section): 0x98, mov_u32	$s1, 2;

  ***** Registers *****
    $s0: 1, 1, 0.000000, 0x00000001
    $s1: 0, 0, 0.000000, 0x00000000
    $s2: 0, 0, 0.000000, 0x00000000
  ***** ********* *****

  ***** Function arguments *****
  ***** ******** ********* *****

  ***** Argument scope *****
  ***** ******** ***** *****

  ***** Variables *****
  ***** ********* *****

***** Backtrace *****
#1 &main ()
***** ********* *****

***** ***** ***** *****

Executing: mov_u32	$s1, 2;
***** Stack frame *****
  Function: &main, 
  Program counter (offset in code section): 0xa4, add_u32	$s2, $s0, $s1;

  ***** Registers *****
    $s0: 1, 1, 0.000000, 0x00000001
    $s1: 2, 2, 0.000000, 0x00000002
    $s2: 0, 0, 0.000000, 0x00000000
  ***** ********* *****

  ***** Function arguments *****
  ***** ******** ********* *****

  ***** Argument scope *****
  ***** ******** ***** *****

  ***** Variables *****
  ***** ********* *****

***** Backtrace *****
#1 &main ()
***** ********* *****

***** ***** ***** *****

Executing: add_u32	$s2, $s0, $s1;
***** Stack frame *****
  Function: &main, 
  Program counter (offset in code section): 0xb0, {

  ***** Registers *****
    $s0: 1, 1, 0.000000, 0x00000001
    $s1: 2, 2, 0.000000, 0x00000002
    $s2: 3, 3, 0.000000, 0x00000003
  ***** ********* *****

  ***** Function arguments *****
  ***** ******** ********* *****

  ***** Argument scope *****
  ***** ******** ***** *****

  ***** Variables *****
  ***** ********* *****

***** Backtrace *****
#1 &main ()
***** ********* *****

***** ***** ***** *****

Executing: {
Argument scope created (size 4)
***** Stack frame *****
  Function: &main, 
  Program counter (offset in code section): 0xb4, arg_u32 %num;

  ***** Registers *****
    $s0: 1, 1, 0.000000, 0x00000001
    $s1: 2, 2, 0.000000, 0x00000002
    $s2: 3, 3, 0.000000, 0x00000003
  ***** ********* *****

  ***** Function arguments *****
  ***** ******** ********* *****

  ***** Argument scope *****
  ***** ******** ***** *****

  ***** Variables *****
  ***** ********* *****

***** Backtrace *****
#1 &main ()
***** ********* *****

***** ***** ***** *****

Executing: arg_u32 %num;
Declaring variable %num width size 4
Create variable: u32 %num(4)
***** Stack frame *****
  Function: &main, 
  Program counter (offset in code section): 0xd0, st_arg_u32	$s2, [%num];

  ***** Registers *****
    $s0: 1, 1, 0.000000, 0x00000001
    $s1: 2, 2, 0.000000, 0x00000002
    $s2: 3, 3, 0.000000, 0x00000003
  ***** ********* *****

  ***** Function arguments *****
  ***** ******** ********* *****

  ***** Argument scope *****
    u32 %num(0x0) = 0 ( 0x00000000 ) 
  ***** ******** ***** *****

  ***** Variables *****
  ***** ********* *****

***** Backtrace *****
#1 &main ()
***** ********* *****

***** ***** ***** *****

Executing: st_arg_u32	$s2, [%num];
***** Stack frame *****
  Function: &main, 
  Program counter (offset in code section): 0xe4, call	&m2s_print_u32 () (%num);

  ***** Registers *****
    $s0: 1, 1, 0.000000, 0x00000001
    $s1: 2, 2, 0.000000, 0x00000002
    $s2: 3, 3, 0.000000, 0x00000003
  ***** ********* *****

  ***** Function arguments *****
  ***** ******** ********* *****

  ***** Argument scope *****
    u32 %num(0x0) = 3 ( 0x00000003 ) 
  ***** ******** ***** *****

  ***** Variables *****
  ***** ********* *****

***** Backtrace *****
#1 &main ()
***** ********* *****

***** ***** ***** *****

Executing: call	&m2s_print_u32 () (%num);
Callee_frame: 
***** Stack frame *****
  Function: &main, 
  Program counter (offset in code section): 0xf4, }

  ***** Registers *****
    $s0: 1, 1, 0.000000, 0x00000001
    $s1: 2, 2, 0.000000, 0x00000002
    $s2: 3, 3, 0.000000, 0x00000003
  ***** ********* *****

  ***** Function arguments *****
  ***** ******** ********* *****

  ***** Argument scope *****
    u32 %num(0x0) = 3 ( 0x00000003 ) 
  ***** ******** ***** *****

  ***** Variables *****
  ***** ********* *****

***** Backtrace *****
#1 &main ()
***** ********* *****

***** ***** ***** *****

